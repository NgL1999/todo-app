// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IHasher is an autogenerated mock type for the IHasher type
type IHasher struct {
	mock.Mock
}

// Hash provides a mock function with given fields: data
func (_m *IHasher) Hash(data string) string {
	ret := _m.Called(data)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewIHasher creates a new instance of IHasher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIHasher(t interface {
	mock.TestingT
	Cleanup(func())
}) *IHasher {
	mock := &IHasher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
