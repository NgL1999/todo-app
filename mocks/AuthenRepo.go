// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	domain "todo-app/domain"

	mock "github.com/stretchr/testify/mock"
)

// AuthenRepo is an autogenerated mock type for the AuthenRepo type
type AuthenRepo struct {
	mock.Mock
}

// Get provides a mock function with given fields: filter
func (_m *AuthenRepo) Get(filter map[string]interface{}) (*domain.User, error) {
	ret := _m.Called(filter)

	var r0 *domain.User
	var r1 error
	if rf, ok := ret.Get(0).(func(map[string]interface{}) (*domain.User, error)); ok {
		return rf(filter)
	}
	if rf, ok := ret.Get(0).(func(map[string]interface{}) *domain.User); ok {
		r0 = rf(filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.User)
		}
	}

	if rf, ok := ret.Get(1).(func(map[string]interface{}) error); ok {
		r1 = rf(filter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAuthenRepo creates a new instance of AuthenRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuthenRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *AuthenRepo {
	mock := &AuthenRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
